@import url('https://fonts.googleapis.com/css2?family=Inter:wght@100..900&family=Poppins:wght@300;400;500;600&family=Rethink+Sans:ital,wght@0,400..800;1,400..800&display=swap');
@import 'tailwindcss/base';
@import 'tailwindcss/components';
@import 'tailwindcss/utilities';

/* ./src/components/AnimatedText.css */
.body{
  font-family: 'Inter','sans-serif';
}
.overflow-hidden {
    overflow: hidden;
  }
  
  .transition-transform {
    transition: transform 0.5s ease-in-out;
  }
  
  .h-8 {
    height: 2rem; /* Tailwind's height class */
  }
  
  .image_wrapper img {
    width: 80%;
  }
  @keyframes fadeInLeft {
    0% {
      opacity: 0;
      transform: translateX(-20px);
    }
    100% {
      opacity: 1;
      transform: translateX(0);
    }
  }
  @keyframes fadeInRight {
    0% {
      opacity: 0;
      transform: translateX(+20px);
    }
    100% {
      opacity: 1;
      transform: translateX(0);
    }
  }
  .animate-fadeInLeft {
    opacity: 0;
    animation: fadeInLeft 3s ease-out forwards;
  }
  .animate-fadeInRight {
    opacity: 0;
    animation: fadeInRight 3s ease-out forwards;
  }
  .overflow-hidden {
    overflow: hidden;
  }
  
  .h-6 {
    height: 1.5rem; /* 6 * 0.25rem */
  }
  
  .transition-transform {
    transition-property: transform;
  }
  
  .ease-in-out {
    transition-timing-function: ease-in-out;
  }
  
  .flex {
    display: flex;
  }
  
  .items-center {
    align-items: center;
  }
  
  .text-sm {
    font-size: 0.875rem; /* Tailwind's text-sm class, equivalent to 14px */
  }
  .glow-text {
    text-shadow: 0 0 5px rgba(75, 75, 75, 0.8), 0 0 10px rgba(255, 255, 255, 0.6), 0 0 15px rgba(255, 2, 2, 0.4);
  }
  
  /* styles.css or App.css */
  
  .glow-border {
    position: relative;
    overflow: hidden;
  }
  
  .glow-border::before {
    content: '';
    position: absolute;
    top: -2px;
    left: -2px;
    right: -2px;
    bottom: -2px;
    z-index: -1;
    background: linear-gradient(45deg, #fe7300, #ff6f00, #fe7300);
    filter: blur(10px);
    opacity: 0.7;
    transition: opacity 0.3s ease;
    animation: glowing 2s infinite;
  }
  
  .glow-border:hover::before {
    opacity: 1;
  }
  
  @keyframes glowing {
    0% {
      filter: blur(10px);
    }
    50% {
      filter: blur(20px);
    }
    100% {
      filter: blur(10px);
    }
  }
  
 
  @keyframes fadeInOut {
    0%,25%,50%,75%, 100% {
      opacity: 0;
    }
    25%{
      opacity: 0.25;
    }
    50% {
      opacity: 0.5;
    }
    
  }
  
  .text-green-500 {
    animation: fadeInOut 5s ease-in infinite;
  }
  
  /* Add this to your global CSS file or in a <style jsx> block in your component */

.speech-bubble {
  position: relative;
  border-radius: 0.4rem;
  margin-bottom: 0.5rem;
}

.speech-bubble::after {
  content: "";
  position: absolute;
  bottom: -20px; /* Adjust to position the tail */
  left: 80%; /* Adjust to center the tail */
  transform: translateX(-50%);
  border-width: 20px 10px 0;
  border-style: solid;
  border-color: white transparent transparent transparent;
}

.animate-fadeIn {
  animation: fadeIn 0.5s ease-out forwards;
}
.rotate-180 {
  transform: rotate(180deg);
  transition: transform 0.3s ease;
}


@keyframes fadeIn {
  from {
    opacity: 0;
    transform: translateY(20px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}
